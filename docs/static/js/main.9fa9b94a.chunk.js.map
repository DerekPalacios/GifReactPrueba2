{"version":3,"sources":["bases/AddCategory.js","Helpers/getGift.js","bases/GiftGridItem.js","bases/GiftGrid.js","Hooks/useFetchGif.js","bases/GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","getGift","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGif","DefaultApp","newCat","cat","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6LAKaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAE7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYI,OACI,uBAAMC,SAPG,SAACC,GACdA,EAAEC,iBAEFN,EAAaE,GACbC,EAAc,KAGV,UACI,4DAEA,uBACAI,KAAK,OACLC,MAAON,EACPO,SAjBM,SAACJ,GACfF,EAAcE,EAAEK,OAAOF,QAiBfG,YAAY,8B,+BCxBPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACiCC,UAAUH,GAD3C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGAA,EAAKC,OAHL,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAgBZM,GAhBY,4CAAH,sDCDXO,EAAe,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,0CAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHD,SAASO,EAAT,GAAgC,IAAbnB,EAAY,EAAZA,UAI9B,ECDuB,SAAAA,GACvB,MAA0BZ,mBAAS,CAC/BmB,KAAM,GAAIa,SAAS,IADvB,mBAAOC,EAAP,KAAcC,EAAd,KAwBJ,OApBIC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAd,GAEFe,YAAW,WAGRH,EAAS,CACJf,KAAMG,EACNU,SAAS,MAGd,UAGT,CAACpB,IAIAqB,EDxB4BK,CAAY1B,GAA9Ba,EAAb,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,UAAmDhB,EAAnD,OACAoB,GAAW,mBAAGJ,UAAU,qDAAb,wBACX,qBAAKA,UAAU,YAAf,SAIIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADAA,EAAIC,SAQrB,0BErBR,IAkCgBgB,EAlCE,WACd,MAAkCvC,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBb,EAAlB,KASA,OAAO,qCAEP,gDACA,cAAC,EAAD,CAAaA,aAVO,SAACyC,GAEjBzC,EAAa,CAACyC,GAAF,mBAAY5B,QAS5B,uBAEA,6BAEQA,EAAUS,KAAI,SAAAoB,GAAG,OAET,cAACV,EAAD,CAEInB,UAAW6B,GADNA,YCzBvBC,EAASC,SAASC,cAAc,SACtCC,IAASC,OAAO,cAAC,EAAD,IAAeJ,K","file":"static/js/main.9fa9b94a.chunk.js","sourcesContent":["\r\n\r\nimport React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategoria}) => {\r\n\r\nconst [inputValue, setInputValue] = useState(\"\")\r\n\r\nconst SetNewValue=(e) =>{\r\n    setInputValue(e.target.value);\r\n}\r\n    \r\nconst capSummit= (e)=>{\r\n    e.preventDefault();\r\n    \r\n    setCategoria(inputValue);\r\n    setInputValue(\"\");\r\n}\r\n    return (\r\n        <form onSubmit={capSummit}>\r\n            <h2> Buscar Gif por Categorias</h2>\r\n\r\n            <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={SetNewValue}\r\n            placeholder=\"Ingrese Categoria ...\"\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategoria: PropTypes.func.isRequired,\r\n}","\r\n\r\n\r\n    export const getGift = async (categoria) =>{\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=uc5hbEMpdnv2xlrg1mCrYG2vxZPDt5O2`\r\n        const resp = await fetch(url);\r\n        const {data}=await resp.json();\r\n\r\n        const gifs = data.map( img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        })\r\n\r\n        //console.log(gifts);\r\n      \r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GiftGridItem = ({ title, url}) => {\r\n   // console.log({title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            \r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../Hooks/useFetchGif';\r\n\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport default function GiftGrid({categoria}) {\r\n    \r\n  \r\n    \r\n    const {data: images,loading} = useFetchGif(categoria);\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h4 className=\"animate__animated animate__fadeIn\">{categoria} </h4>\r\n       {loading && <p className=\"animate__animated animate__flash animate__repeat-3\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n     \r\n        {\r\n            \r\n            images.map(img=>(\r\n                <GiftGridItem   \r\n                    key={img.id}   \r\n                    { ...img}\r\n                />\r\n                \r\n            )\r\n        )}\r\n       \r\n        </div>\r\n        <hr></hr>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport { getGift } from '../Helpers/getGift';\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGif = categoria => {\r\n    const [state, setstate] = useState({\r\n        data: [], loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGift(categoria)\r\n        .then(img =>{\r\n\r\n            setTimeout(() => {\r\n            \r\n                \r\n               setstate({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n\r\n            }, 3000);\r\n        })\r\n\r\n    },[categoria])\r\n\r\n    \r\n\r\nreturn state;\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport GiftGrid from './GiftGrid';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DefaultApp= () => {\r\n    const [categoria, setCategoria] = useState([]);\r\n\r\n    const AddCategoria =(newCat)=>{\r\n      \r\n        setCategoria([newCat,...categoria ]);\r\n        \r\n    }\r\n\r\n\r\n    return <>\r\n\r\n    <h2>Gif Expert App</h2>\r\n    <AddCategory setCategoria = {AddCategoria}/>\r\n    <hr></hr>\r\n\r\n    <ol>\r\n        {\r\n            categoria.map(cat =>\r\n                (\r\n                    <GiftGrid \r\n                        key={cat}\r\n                        categoria={cat} />\r\n                \r\n            ))\r\n\r\n        }\r\n        \r\n    </ol>\r\n    \r\n    \r\n    </>\r\n}\r\n\r\nexport default  DefaultApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DefaultApp from './bases/GifExpertApp'\n\nconst divRoot= document.querySelector('#root');\nReactDOM.render(<DefaultApp />,divRoot);\n\n"],"sourceRoot":""}